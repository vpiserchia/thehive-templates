{"_id":"~368872","createdBy":"admin@lab.local","updatedBy":"admin@lab.local","createdAt":1734970126770,"updatedAt":1748893630393,"_type":"caseTemplate","name":"IRM#3 Unix/Linux Intrusion","displayName":"","titlePrefix":"","description":"Live Analysis on a suspected system","severity":3,"tags":[],"flag":false,"tlp":2,"pap":2,"tasks":[{"id":"~82116696","_id":"~82116696","createdBy":"admin@lab.local","createdAt":1748893630392,"_type":"case_task","title":"Capitalize","group":"Lessons Learned","description":"Actions to improve the Unix/Linux intrusion detection management processes should be defined to capitalize on this experience.","status":"Waiting","flag":false,"order":14},{"id":"~123072592","_id":"~123072592","createdBy":"admin@lab.local","createdAt":1748893630383,"_type":"case_task","title":"Unusual services","group":"Identification","description":"- (Linux only) Run chkconfig (if installed) to check for all enabled services:\n```\n# chkconfig --list\n```\n\n- Look at the running processes (remember: a rootkit might change your results for everything in this paper, especially here!).\n```\n# ps -aux\n```\n\n- Use ```lsof –p [pid]``` on unknown processes:\n\n\n**You should know your usual running processes, and be able to figure out which processes could have been added by a hacker. \nPay a special attention to the processes running under UID 0.**","status":"Waiting","flag":false,"order":3},{"id":"~123138272","_id":"~123138272","createdBy":"admin@lab.local","createdAt":1748893630383,"_type":"case_task","title":"Unusual files","group":"Identification","description":"- Look for all SUID and GUID files:\n```\nfind / -uid 0 \\( –perm -4000 –o –perm 2000 \\) –print\n```\n\n- Look for weird file names ,starting with “.“ or “..“ or ““ :\n```\n# find / -name “ *“ –print\n# find / -name “. *“ –print\n# find / -name “.. *“ –print\n```\n\n- Look for large files(here: larger than 10MB)\n```\n# find / -size +10MB –print\n```\n\n- Look for processes running from or to files which have been unlinked :\n```\n# lsof +L1\n```\n- Look for unusual files in ```/proc``` and ```/tmp```. This last directory is a place of choice for hackers to store data or malicious binaries.","status":"Waiting","flag":false,"order":2},{"id":"~123142344","_id":"~123142344","createdBy":"admin@lab.local","createdAt":1748893630386,"_type":"case_task","title":"Unusual Log Entries","group":"Identification","description":"Look through the log files on the system for suspicious events, including the following:\n- Huge number of authentication/login failures from local or remote access tools (sshd,ftpd,etc.)\n- Remote Procedure Call (RPC) programs with a log entry that includes a large number of strange characters ...)\n- A huge number of Apache logs mentioning “error”\n- Reboots (Hardware reboot)\n- Restart of applications (Software reboot)\n\nAlmost all log files are located under /var/log directory in most Linux distributions. Here are the main ones:\n- /var/log/message: General message and system related stuff\n- /var/log/auth.log: Authenication logs\n- /var/log/kern.log: Kernel logs\n- /var/log/cron.log: Crond logs (cron job)\n- /var/log/maillog: Mail server logs\n- /var/log/httpd/: Apache access and error logs directory\n- /var/log/boot.log: System boot log\n- /var/log/mysqld.log: MySQL database server log file\n- /var/log/secure: Authentication log\n- /var/log/utmp or /var/log/wtmp: Login records file\n- /var/log/syslog: cron, samba activity and mote\n- /root/.*history: Root user command history\n- /home/*/.*history: Users' command history\n\nTo look through the log files, tools like cat and grep may be useful:\n```\ncat /var/log/httpd/access.log | grep \"GET /signup.jsp\"\n```","status":"Waiting","flag":false,"order":6},{"id":"~123142368","_id":"~123142368","createdBy":"admin@lab.local","createdAt":1748893630384,"_type":"case_task","title":"Unusual Network Activity","group":"Identification","description":"- Try to detect sniffers on the network using several ways:\n  - Look at your kernel log files for interfaces entering promiscuous mode such as : ```kernel: device eth0 entered promiscuous mode```\n\n  - Use ```ip link``` to detect the “PROMISC” flag.\nPrefer this method to ```ifconfig```, since ifconfig does not work on all kernels.\n\n- Look for unusual port activity:\n```\n# netstat –nap\n# lsof –i ```\nto get more information about processes listening to ports.\n- Look for unusual MAC entries in your LAN:\n```# arp -a```\n- Look for any unexpected IP address on the network:\n```\n# netstat -ntaupe\n# netstat -ant\n# watch ss -tt\n```","status":"Waiting","flag":false,"order":4},{"id":"~123146440","_id":"~123146440","createdBy":"admin@lab.local","createdAt":1748893630391,"_type":"case_task","title":"Report","group":"Lessons Learned","description":"A crisis report should be written and made available to all of the actors of the crisis management cell. The following themes should be described:\n- Initial detection\n- Actions and timelines \n- What went right\n- What went wrong\n- Incident cost","status":"Waiting","flag":false,"order":13},{"id":"~123220008","_id":"~123220008","createdBy":"admin@lab.local","createdAt":1748893630382,"_type":"case_task","title":"Unusual accounts","group":"Identification","description":"- Look for any suspicious entry in /etc/passwd, especially with UID 0. Also check /etc/group and /etc/shadow.\n\n- Look for orphaned files, which could have been left by a deleted account used in the attack:\n```\nfind / \\( -nouser –o –nogroup \\) -print\n```","status":"Waiting","flag":false,"order":1},{"id":"~164081696","_id":"~164081696","createdBy":"admin@lab.local","createdAt":1748893630381,"_type":"case_task","title":"Deploy an EDR solution on endpoints and servers","group":"Preparation","description":"This tool become one of the cornerstones of the incident response in case of ransomware or in large scale compromise, facilitating identification, containment, and remediation phases.\n* Launch EDR search and AV scan with IoC explicit rules and get first indicators for remediation process following.\n- Set your EDR policies in prevent mode\n\n**In absence of EDR, a physical access to the suspicious system should ne given to the forensic investigator. Physical access is preferred to remote access, since the hacker could detect the investigations done on the system (by using a network sniffer for example)**\n\n- **A physical access to the suspicious system** should be offered to the forensic investigator.\n- **A physical copy of the hard-disk** might be necessary for forensic and evidence purposes. If needed, a physical access could be necessary to disconnect the suspected machine from any network.\n\n- A good **knowledge of the usual network activity of the machine/server is needed**. You should have a file on a secure place describing the usual port activity, to compare efficiently to the current state.\n- A good **knowledge of the usual services** is needed. Don’t hesitate to ask a Unix/Linux Expert for his assistance, when applicable.\n  - Use Auditd and Linux logs like system, message, and application logs (Apache, NGINX, ...)\n  - Use AppArmor for example\n\n- You should have *a regularly updated list of all critical files**, (especially SUID and GUID files) stored in a secure place out of the network or even on paper. With this list, you can easily separate usual SUID files and detect unusual ones.\n- Have a **map of your usual port activity/traffic rules.**","status":"Waiting","flag":false,"order":0},{"id":"~164085792","_id":"~164085792","createdBy":"admin@lab.local","createdAt":1748893630385,"_type":"case_task","title":"Unusual automated tasks","group":"Identification","description":"- Look for unusual jobs scheduled by users mentioned in /etc/cron.allow. Pay a special attention to the cron jobs scheduled by UID 0 accounts (root):\n```\n# crontab –u root -l\n```\n\n- Look for unusual system-wide cron jobs: \n```\n# cat /etc/crontab\n# ls –la /etc/cron.*\n```","status":"Waiting","flag":false,"order":5},{"id":"~164089888","_id":"~164089888","createdBy":"admin@lab.local","createdAt":1748893630387,"_type":"case_task","title":"Unusual Kernel log Entries","group":"Identification","description":"- Look through the kernel log files on the system for suspicious events. Use :\n```\n# dmesg\n```\n- List all important kernel and system information : \n```\n# lsmod\n# lspci\n```\n\n- Look for known rootkit(use rkhunter and such tools)","status":"Waiting","flag":false,"order":7},{"id":"~164093984","_id":"~164093984","createdBy":"admin@lab.local","createdAt":1748893630387,"_type":"case_task","title":"File hashes","group":"Identification","description":"Verify all MD5 hashes of your binaries in /bin, /sbin, /usr/bin, /usr/sbin or any other related binary storing place. (use AIDE or such tool)\n\n**WARNING: this operation will probably change all file timestamps. This should only be done after all other investigations are done and you feel like you can alter these data.**\n\n- On systems with RPM installed, use:\n```\n# rpm –Va | sort\n```\n\n- On some Linux, a script named check-packages can be used.\n\n- On Solaris: \n```\n# pkg_chk –vn\n```\n\n- On Debian: \n```\ndebsums –ac\n```\n\n- On Openbsd (not really this but a way): \n```\npkg_delete -vnx\n```","status":"Waiting","flag":false,"order":8},{"id":"~164098080","_id":"~164098080","createdBy":"admin@lab.local","createdAt":1748893630388,"_type":"case_task","title":"Backup","group":"Containment","description":"- Securely vackup important data from the compromised machine, if possible using a `bit-by-bit` physical copy of the whole hard disk on an external support. Also make a copy of the memory (RAM) of the system, which will be investigated if necessary.\n- Isolate with the EDR and inspect other computers and networks.\n**Or**\n- Isolate with the firewall or switches.\n\n**If the machine is not considered critical for the company and can be disconnected, shut the machine down the hard way, removing its power plug. If it is a laptop with a battery on, just push the “off” button for some seconds until the computer switches off.**\n\n**Offline investigations should be started right away if the identification step didn’t give any result, but the system is still suspected of being compromised.**","status":"Waiting","flag":false,"order":9},{"id":"~205041664","_id":"~205041664","createdBy":"admin@lab.local","createdAt":1748893630389,"_type":"case_task","title":"Find evidences of every action of the hacker","group":"Containment","description":"Try to find evidences of every action of the hacker: (using forensic tools like Sleuth Kit/Autopsy for example)\n\n- Find all files used by the attacker, including deleted files and see what has been done with them or at least their functionality to evaluate the threat.\n- Check all files accessed recently.\n- Check log files.\n- More generally, try to find how the attacker got into the system. All leads should be considered. If no computer proof of the intrusion is found, never forget it could come from an insider.\n- Apply fixes when applicable, to prevent the same kind of intrusion, in case the attacker used a known fixed vulnerability.","status":"Waiting","flag":false,"order":10},{"id":"~205045760","_id":"~205045760","createdBy":"admin@lab.local","createdAt":1748893630390,"_type":"case_task","title":"Remediation","group":"Remediation","description":"** WARNING: ONLY START REMEDIATING ONCE YOU ARE 100% SURE THAT YOU HAVE WELL SCOPED UP AND CATAINED THE PERIMETER - SO AS TO PREVENT THE ATTACKER FROM LAUNCHING RETALIATION ACTIONS.**\n\nTemporary remove all accesses to the accounts involved in the incident, and remove all fraudulent files.","status":"Waiting","flag":false,"order":11},{"id":"~205049856","_id":"~205049856","createdBy":"admin@lab.local","createdAt":1748893630390,"_type":"case_task","title":"Recovery","group":"Recovery","description":"No matter how far the hacker has gone into the system and the knowledge you might have about the compromission, as long as the system has been penetrated, the best practice is **to reinstall the system completely and apply all security fixes.**\n\n In case this solution can’t be applied, you should:\n- Change all the system’s accounts passwords, and make your users do so in a secure way: they should use passwords with upper/lower case, special characters, numbers, and at least be 7 characters long.\n- Check the integrity of the whole data stored on the system, using MD5 hashes.\n- Restore all binaries which could have been changed (Example: /`bin/su`)\n- Replace all compromised packages with safe ones.","status":"Waiting","flag":false,"order":12}],"status":"Ok","customFields":{},"metrics":{}}